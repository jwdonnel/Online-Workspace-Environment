function getParameterByName(e) { e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"); var t = "[\\?&]" + e + "=([^&#]*)"; var n = new RegExp(t); var r = n.exec(window.location.search); if (r == null) { return "" } else { return decodeURIComponent(r[1].replace(/\+/g, " ")) } } function FindAndCreateEmoticons() { $.ajax({ type: "POST", url: pageUrl + "/GetEmoticons", data: "{ }", contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { $("#emoticons-holder").html(""); if (e.d.length > 0) { for (var t = 0; t < e.d.length; t++) { var n = e.d[t]; n = n.substring(n.lastIndexOf("/") + 1); n = n.replace(n.substring(n.indexOf(".")), ""); $("#emoticons-holder").append("<img alt='{" + t + "}' src='" + e.d[t] + "' title='" + n + "' />") } } } }) } function ChatBoxKeyDown(e) { try { if (e.which == 13) { postChatMessage(); _isTyping = false; $("#chatEnterMessage").focus(); return false } else { if (_isTyping == false) { isTyping("1"); _isTyping = true } } } catch (t) { if (e.keyCode == 13) { postChatMessage(); _isTyping = false; $("#chatEnterMessage").focus(); return false } else { if (_isTyping == false) { isTyping("1"); _isTyping = true } } delete t } } function ChatBoxFocus() { if (($.trim($("#chatEnterMessage").val()) == "Type message here..." || $.trim($("#chatEnterMessage").val()) == "") && !$("#chatEnterMessage").is(":disabled") && _isTyping == false) { $("#chatEnterMessage").val(""); if (loadingposts == 0) { isTyping("0") } } } function ChatBoxBlur() { isTyping("0"); _isTyping = false; if ($.trim($("#chatEnterMessage").val()) == "") { $("#chatEnterMessage").val("Type message here...") } } function ViewEmoticons() { $("#addImage-overlay").hide(); $this = $("#emoticon-overlay"); if ($this.css("display") != "block") { $this.show(); var e = -($this.height() / 2); $this.css({ marginTop: e }) } else { $this.hide() } } function ViewAddImage() { $("#emoticon-overlay").hide(); $this = $("#addImage-overlay"); $this.find("#tb_addImage").val("Image Url"); if ($this.css("display") != "block") { $this.show(); $("#tb_addImage").focus(); var e = -($this.height() / 2); $this.css({ marginTop: e }) } else { $this.hide() } } function AddImage() { var e = document.getElementById("chatEnterMessage"); if (!e.disabled) { var t = $.trim($("#tb_addImage").val()); if (checkURL(t)) { if (t != "Image Url" && t != "") { e.value = "<img alt='' src='" + t + "' class='chat-message-image' />"; $("#addImage-overlay").hide(); postChatMessage() } } else { $("#image-error-msg").html("<span style='color: Red;'>Not an image!</span>"); setTimeout(function () { $("#image-error-msg").html("") }, 2500) } } } function checkURL(e) { return e.match(/\.(jpeg|jpg|gif|png)$/) != null } function AddImageKeyPress() { try { if (event.which == 13) { AddImage(); return false } } catch (e) { if (event.keyCode == 13) { AddImage(); return false } delete e } } function GetEmoticon(e) { $(".emoticons img").each(function () { var t = $(this); var n = t.attr("src"); var r = t.attr("alt"); while (e.indexOf(r) != -1) { e = e.replace(r, "<img alt='' src='" + n + "' />") } }); return e } function isTyping(e) { if (!_isTypingCall) { _isTypingCall = true; $.ajax({ type: "POST", url: pageUrl + "/CallIsTyping", data: '{ "typing": "' + e + '","userto": "' + currUser + '" }', contentType: "application/json; charset=utf-8", dataType: "json", complete: function (e) { _isTypingCall = false } }) } } function postChatMessage() { var e = document.getElementById("chatEnterMessage"); if (e.value == "Type message here..." || e.value == "") { e.disabled = false } else { if (!_isAddCall) { _isAddCall = true; $("#emoticon-overlay").hide(); $("#addImage-overlay").hide(); $("#chatmessages").append("<div id='chatloading_img'>Please wait...</div>"); var t = document.getElementById("chatmessages"); t.scrollTop = t.scrollHeight; e.disabled = true; $.ajax({ type: "POST", url: pageUrl + "/CallAddMessage", data: '{ "message": "' + escape(e.value) + '","userto": "' + currUser + '" }', contentType: "application/json; charset=utf-8", success: function (t) { if (t.d[0] != null) { e.value = ""; var n = $.trim($("#chatmessages").html()); n = n.replace(/"/gi, "'"); var r = "<div class='chatLineSep-noposts'>No posts available</div>"; if (n == r) { $("#chatmessages").html("") } updateMessages(t.d); _isTyping = false; e.focus(); e.disabled = false } _isAddCall = false }, error: function (t) { e.value = ""; var n = $.trim($("#chatmessages").html()); n = n.replace(/"/gi, "'"); var r = "<div class='chatLineSep-noposts'>No posts available</div>"; if (n == r) { $("#chatmessages").html("") } _isTyping = false; e.focus(); e.disabled = false; _isAddCall = false } }) } } } function updateChatMessages() { if (!_isUpdateCall) { _isUpdateCall = true; $.ajax({ type: "POST", url: pageUrl + "/CallMessages", data: '{ "userto": "' + currUser + '","isPostBack": "' + isPostBack + '" }', contentType: "application/json; charset=utf-8", dataType: "json", cache: false, success: function (e) { if (e.d[0] != null) updateMessages(e.d[0]); _isUpdateCall = false; updateChatMessages() }, error: function (e) { _isUpdateCall = false; updateChatMessages() } }) } } function updateMessages(e) { setChatMessages(e[1]); setIsTyping(e[2]); setOnlineStatus(e[0]) } function setChatMessages(e) { if (loadingposts == 1) { if ($.trim(e) != $.trim($("#chatmessages").text())) { $("#chatmessages").html(""); loadingposts = 0 } } var t; if (e != "" && e != null && isPostBack == 1) { $("#chatmessages").hide(); $("#chatmessages").html(GetEmoticon(e)); var n = new Array; for (var r = $(".chatLineSep").size() - 1; r >= 0; r--) { if ($(".chatLineSep").eq(r).hasClass("continued-chat")) { n.push("<div class='clear-space-five'></div>" + $(".chatLineSep").eq(r).html()); $(".chatLineSep").eq(r).remove() } else { for (var i = n.length - 1; i >= 0; i--) { $(".chatLineSep").eq(r).find(".smsg-text").append(n[i]) } n = new Array } } $("#chatmessages").show(); t = document.getElementById("chatmessages"); t.scrollTop = t.scrollHeight; AdjustScroll() } if (e != "" && e != null && isPostBack == 0) { $("#chatloading_img").remove(); if ($("#chatmessages").find(".chatLineSep-noposts").text().toLowerCase() == "no posts available") $("#chatmessages").html(""); var s = $(".chatLineSep"); var o = $.makeArray(s); var u = $(".chatLineSep").size() - 1; var a = $(o).eq(u).find(".date-nodisplay").attr("id"); var f = $(e).find("#" + a); if (f.length == 0) { $("#chatmessages").append(GetEmoticon(e)); if ($(".chatLineSep").last().hasClass("continued-chat")) { var l = $(".chatLineSep").last().html(); $(".chatLineSep").last().remove(); for (var r = $(".chatLineSep").size() - 1; r >= 0; r--) { if (!$(".chatLineSep").eq(r).hasClass("continued-chat")) { $(".chatLineSep").eq(r).find(".smsg-text").append("<div class='clear-space-five'></div>" + l); break } } } t = document.getElementById("chatmessages"); t.scrollTop = t.scrollHeight; AdjustScroll() } } if (isPostBack == 1) { isPostBack = 0 } AdjustTimeZone() } function AdjustScroll() { $("img").load(function () { elem = document.getElementById("chatmessages"); elem.scrollTop = elem.scrollHeight }) } function AdjustTimeZone() { $(".date-chat-line").each(function () { if (!$(this).hasClass("time-adjusted")) { try { if ($(this).html().split(";").length > 1) { var e = new Date; var t = $(this).html().split(";")[0]; var n = $(this).html().split(";")[1]; var r = t.match(/(\d+)\:(\d+) (\w+)/); var i = /am/i.test(r[3]) ? parseInt(r[1], 10) : parseInt(r[1], 10) + 12; var s = parseInt(r[2], 10); var o = e.getTimezoneOffset(); o = -1 * (o / 60 * -1 - parseInt(n)); i = i - o; e.setHours(i); e.setMinutes(s); var u = e.toLocaleTimeString().split(":"); var a = u[2].split(" ")[1]; $(this).html(u[0] + ":" + u[1] + " " + a); $(this).addClass("time-adjusted") } } catch (f) { } } }) } function setOnlineStatus(e) { var t = document.getElementById("chatEnterMessage"); if (e == "offline") { t.disabled = true; $("#userStatusMessage").html("<div>User is offline</div>"); $("#chatEnterMessage").val("") } else if (e == "online") { if (t.disabled != false || isLoadingModal == 1) { t.disabled = false; $("#userStatusMessage").html(""); if (isLoadingModal == 1) { $("#chatEnterMessage").val("") } else { $("#chatEnterMessage").val("Type message here...") } $("#chatEnterMessage").focus() } } isLoadingModal = 0 } function setIsTyping(e) { if (e == "istyping") { $("#userStatusMessage").html("<div>" + currUser + " is typing...</div>") } else { $("#userStatusMessage").html("") } } var pageUrl = "../ChatClient/ChatService.asmx"; var currUser = ""; var loadingtag = "<h3 class='float-left' style='padding-top: 7px; padding-left: 5px;'>Loading posts. Please wait...</h3>"; var loadingposts = 0; var isPostBack = 1; var isLoadingModal = 1; $(document).ready(function () { Array.prototype.indexOf; if (!Array.prototype.indexOf) { Array.prototype.indexOf = function (e, t) { for (var n = t || 0, r = this.length; n < r; n++) { if (this[n] === e) { return n } } return -1 } } currUser = getParameterByName("user"); $("#chatmessages").html(loadingtag); loadingposts = 1; updateChatMessages(); FindAndCreateEmoticons(); document.title = currUser + " - Chat Client" }); var _isTyping = false; $(document.body).on("focus", "#chatEnterMessage", function () { ChatBoxFocus() }); $(document.body).on("blur", "#chatEnterMessage", function () { ChatBoxBlur() }); $(document.body).on("click", ".emoticons img", function () { var e = document.getElementById("chatEnterMessage"); if (!e.disabled) { var t = $(this).attr("alt"); if (e.value == "Type message here...") { e.value = "" } e.value += t + " "; e.focus() } }); var _isTypingCall = false; var _isAddCall = false; var _isUpdateCall = false;