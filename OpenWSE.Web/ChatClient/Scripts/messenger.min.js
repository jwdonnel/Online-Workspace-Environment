// -----------------------------------------------------------------------------------
//
//	Chat Client v3.3
//	by John Donnelly
//	Last Modification: 5/30/2017
//
//	Licensed under the Creative Commons Attribution 2.5 License - http://creativecommons.org/licenses/by/2.5/
//  	- Free for use in both personal and commercial projects
//		- Attribution requires leaving author name, author link, and the license info intact.
//
// -----------------------------------------------------------------------------------
function getParameterByName(e) { var t = "[\\?&]" + (e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]")) + "=([^&#]*)", a = new RegExp(t).exec(window.location.search); return null == a ? "" : decodeURIComponent(a[1].replace(/\+/g, " ")) } function FindAndCreateEmoticons() { AjaxCall(pageUrl + "/GetEmoticons", "{ }", null, function (e) { if ($("#emoticons-holder").html(""), e.d.length > 0) for (var t = 0; t < e.d.length; t++) { var a = e.d[t]; a = (a = a.substring(a.lastIndexOf("/") + 1)).replace(a.substring(a.indexOf(".")), ""), $("#emoticons-holder").append("<img alt='{" + t + "}' src='" + e.d[t] + "' title='" + a + "' />") } }) } function ChatBoxKeyDown(e) { try { if (13 == e.which) return postChatMessage(), _isTyping = !1, $("#chatEnterMessage").focus(), !1; 0 == _isTyping && (isTyping("1"), _isTyping = !0) } catch (t) { if (13 == e.keyCode) return postChatMessage(), _isTyping = !1, $("#chatEnterMessage").focus(), !1; 0 == _isTyping && (isTyping("1"), _isTyping = !0), delete t } } function ChatBoxFocus() { "Type message here..." != $.trim($("#chatEnterMessage").val()) && "" != $.trim($("#chatEnterMessage").val()) || $("#chatEnterMessage").is(":disabled") || 0 != _isTyping || ($("#chatEnterMessage").val(""), 0 == loadingposts && isTyping("0")) } function ChatBoxBlur() { isTyping("0"), _isTyping = !1, "" == $.trim($("#chatEnterMessage").val()) && $("#chatEnterMessage").val("Type message here...") } function ViewEmoticons() { if ($("#addImage-overlay").hide(), $this = $("#emoticon-overlay"), "block" != $this.css("display")) { $this.show(); var e = -$this.height() / 2; $this.css({ marginTop: e }) } else $this.hide() } function ViewAddImage() { if ($("#emoticon-overlay").hide(), $this = $("#addImage-overlay"), $this.find("#tb_addImage").val("Image Url"), "block" != $this.css("display")) { $this.show(), $("#tb_addImage").focus(); var e = -$this.height() / 2; $this.css({ marginTop: e }) } else $this.hide() } function AddImage() { var e = document.getElementById("chatEnterMessage"); if (!e.disabled) { var t = $.trim($("#tb_addImage").val()); checkURL(t) ? "Image Url" != t && "" != t && (e.value = "<img alt='' src='" + t + "' class='chat-message-image' />", $("#addImage-overlay").hide(), postChatMessage()) : ($("#image-error-msg").html("<span style='color: Red;'>Not an image!</span>"), setTimeout(function () { $("#image-error-msg").html("") }, 2500)) } } function checkURL(e) { return null != e.match(/\.(jpeg|jpg|gif|png)$/) } function AddImageKeyPress() { try { if (13 == event.which) return AddImage(), !1 } catch (e) { if (13 == event.keyCode) return AddImage(), !1; delete e } } function GetEmoticon(e) { return $(".emoticons img").each(function () { for (var t = $(this), a = t.attr("src"), s = t.attr("alt") ; -1 != e.indexOf(s) ;) e = e.replace(s, "<img alt='' src='" + a + "' />") }), e } function isTyping(e) { _isTypingCall || (_isTypingCall = !0, AjaxCall(pageUrl + "/CallIsTyping", '{ "typing": "' + e + '","userto": "' + currUser + '" }', null, null, null, function (e) { _isTypingCall = !1 })) } function postChatMessage() { var e = document.getElementById("chatEnterMessage"); if ("Type message here..." == e.value || "" == e.value) e.disabled = !1; else if (!_isAddCall) { _isAddCall = !0, $("#emoticon-overlay").hide(), $("#addImage-overlay").hide(), $("#chatmessages").append("<div id='chatloading_img'>Please wait...</div>"); var t = document.getElementById("chatmessages"); t.scrollTop = t.scrollHeight, e.disabled = !0, AjaxCall(pageUrl + "/CallAddMessage", '{ "message": "' + escape(e.value) + '","userto": "' + currUser + '" }', null, function (t) { if (null != t.d[0]) { e.value = ""; var a = $.trim($("#chatmessages").html()); "<div class='chatLineSep-noposts'>No posts available</div>" == (a = a.replace(/"/gi, "'")) && $("#chatmessages").html(""), updateMessages(t.d), _isTyping = !1, e.focus(), e.disabled = !1 } _isAddCall = !1 }, function (t) { e.value = ""; var a = $.trim($("#chatmessages").html()); "<div class='chatLineSep-noposts'>No posts available</div>" == (a = a.replace(/"/gi, "'")) && $("#chatmessages").html(""), _isTyping = !1, e.focus(), e.disabled = !1, _isAddCall = !1 }) } } function LoadFontStyles() { AjaxCall(pageUrl + "/LoadFontStyle", "{ }", { cache: !1 }, function (e) { 3 == e.d.length && (LoadCustomFontFamily(e.d[0]), LoadCustomFontSize(e.d[1]), LoadCustomFontColor(e.d[2])) }) } function LoadCustomFontFamily(e) { if (null != e && "" != e && -1 != e.indexOf(".css")) { $("link[href='" + e + "']").remove(); var t = document.getElementsByTagName("head")[0]; link = document.createElement("link"), link.type = "text/css", link.rel = "stylesheet", link.href = e, t.appendChild(link) } } function LoadCustomFontSize(e) { null != e && "" != e && $("body").css("font-size", e) } function LoadCustomFontColor(e) { null != e && "" != e && $("body").css("color", e) } function updateChatMessages() { _isUpdateCall || (_isUpdateCall = !0, AjaxCall(pageUrl + "/CallMessages", '{ "userto": "' + currUser + '","isPostBack": "' + isPostBack + '" }', { cache: !1 }, function (e) { null != e.d[0] && updateMessages(e.d[0]), _isUpdateCall = !1, updateChatMessages() }, function (e) { _isUpdateCall = !1, updateChatMessages() })) } function updateMessages(e) { setChatMessages(e[1]), setIsTyping(e[2]), setOnlineStatus(e[0]) } function setChatMessages(e) { 1 == loadingposts && $.trim(e) != $.trim($("#chatmessages").text()) && ($("#chatmessages").html(""), loadingposts = 0); var t; if ("" != e && null != e && 1 == isPostBack) { $("#chatmessages").hide(), $("#chatmessages").html(GetEmoticon(e)); for (var a = new Array, s = $(".chatLineSep").length - 1; s >= 0; s--) if ($(".chatLineSep").eq(s).hasClass("continued-chat")) a.push("<div class='clear-space-five'></div>" + $(".chatLineSep").eq(s).html()), $(".chatLineSep").eq(s).remove(); else { for (var i = a.length - 1; i >= 0; i--) $(".chatLineSep").eq(s).find(".smsg-text").append(a[i]); a = new Array } $("#chatmessages").show(), (t = document.getElementById("chatmessages")).scrollTop = t.scrollHeight, AdjustScroll() } if ("" != e && null != e && 0 == isPostBack) { $("#chatloading_img").remove(), "no posts available" == $("#chatmessages").find(".chatLineSep-noposts").text().toLowerCase() && $("#chatmessages").html(""); var n = $(".chatLineSep"), l = $.makeArray(n), o = $(".chatLineSep").length - 1, c = $(l).eq(o).find(".date-nodisplay").attr("id"); if (0 == $(e).find("#" + c).length) { if ($("#chatmessages").append(GetEmoticon(e)), $(".chatLineSep").last().hasClass("continued-chat")) { var d = $(".chatLineSep").last().html(); $(".chatLineSep").last().remove(); for (s = $(".chatLineSep").length - 1; s >= 0; s--) if (!$(".chatLineSep").eq(s).hasClass("continued-chat")) { $(".chatLineSep").eq(s).find(".smsg-text").append("<div class='clear-space-five'></div>" + d); break } } (t = document.getElementById("chatmessages")).scrollTop = t.scrollHeight, AdjustScroll() } } 1 == isPostBack && (isPostBack = 0), AdjustTimeZone() } function AdjustScroll() { $("img").each(function () { this.onload = function () { elem = document.getElementById("chatmessages"), elem.scrollTop = elem.scrollHeight } }) } function AdjustTimeZone() { $(".date-chat-line").each(function () { if (!$(this).hasClass("time-adjusted")) try { if ($(this).html().split(";").length > 1) { var e = new Date, t = $(this).html().split(";")[0], a = $(this).html().split(";")[1], s = t.match(/(\d+)\:(\d+) (\w+)/), i = /am/i.test(s[3]) ? parseInt(s[1], 10) : parseInt(s[1], 10) + 12, n = parseInt(s[2], 10), l = e.getTimezoneOffset(); i -= l = -1 * (l / 60 * -1 - parseInt(a)), e.setHours(i), e.setMinutes(n); var o = e.toLocaleTimeString().split(":"), c = o[2].split(" ")[1]; $(this).html(o[0] + ":" + o[1] + " " + c), $(this).addClass("time-adjusted") } } catch (e) { } }) } function setOnlineStatus(e) { var t = document.getElementById("chatEnterMessage"); "offline" == e ? (t.disabled = !0, $("#userStatusMessage").html("<div>User is offline</div>"), $("#chatEnterMessage").val("")) : "online" == e && (0 == t.disabled && 1 != isLoadingModal || (t.disabled = !1, $("#userStatusMessage").html(""), 1 == isLoadingModal ? $("#chatEnterMessage").val("") : $("#chatEnterMessage").val("Type message here..."), $("#chatEnterMessage").focus())), isLoadingModal = 0 } function setIsTyping(e) { "istyping" == e ? $("#userStatusMessage").html("<div>" + currUser + " is typing...</div>") : $("#userStatusMessage").html("") } function AjaxCall(e, t, a, s, i, n) { if (e) { var l = { url: e }; t && (l.data = t), a || (a = { dataType: "json", type: "POST", contentType: "application/json; charset=utf-8" }), l.dataType = a.dataType ? a.dataType : "json", l.type = a.type ? a.type : "POST", l.contentType = a.contentType ? a.contentType : "application/json; charset=utf-8", null !== a.dataFilter && void 0 !== a.dataFilter && (l.dataFilter = a.dataFilter), null !== a.cache && void 0 !== a.cache && (l.cache = a.cache), null !== a.async && void 0 !== a.async && (l.async = a.async), null !== a.processData && void 0 !== a.processData && (l.processData = a.processData), s && "function" == typeof s && (l.success = s), l.error = i && "function" == typeof i ? i : function (e) { loadingPopup.RemoveMessage() }, n && "function" == typeof n && (l.complete = n), $.ajax(l) } } var pageUrl = "../ChatClient/ChatService.asmx", currUser = "", loadingtag = "<h3 class='float-left' style='padding-top: 7px; padding-left: 5px;'>Loading posts. Please wait...</h3>", loadingposts = 0, isPostBack = 1, isLoadingModal = 1; $(document).ready(function () { Array.prototype.indexOf, Array.prototype.indexOf || (Array.prototype.indexOf = function (e, t) { for (var a = t || 0, s = this.length; a < s; a++) if (this[a] === e) return a; return -1 }), LoadFontStyles(), currUser = getParameterByName("user"), $("#chatmessages").html(loadingtag), loadingposts = 1, updateChatMessages(), FindAndCreateEmoticons(), document.title = "Chatting with " + currUser }); var _isTyping = !1; $(document.body).on("focus", "#chatEnterMessage", function () { ChatBoxFocus() }), $(document.body).on("blur", "#chatEnterMessage", function () { ChatBoxBlur() }), $(document.body).on("click", ".emoticons img", function () { var e = document.getElementById("chatEnterMessage"); if (!e.disabled) { var t = $(this).attr("alt"); "Type message here..." == e.value && (e.value = ""), e.value += t + " ", e.focus() } }); var _isTypingCall = !1, _isAddCall = !1, _isUpdateCall = !1;
